Part 1
```java
import java.util.Stack;

public class BookStack {
private Stack> bookStack;

public BookStack() {
bookStack = new Stack<>();
bookStack.push("Book 1");
bookStack.push("Book 2");
bookStack.push("Book 3");
bookStack.push("Book 4");
bookStack.push("Book 5");
bookStack.push("Book 6");
bookStack.push("Book 7");
bookStack.push("Book 8");
bookStack.push("Book 9");
bookStack.push("Book 10");
}

public void reportBookTitles() {
System.out.println("Books in the stack:");
for (String bookTitle : bookStack) {
System.out.println(bookTitle);
}
}

public static void main(String[] args) {
BookStack stack = new BookStack();
stack.reportBookTitles();
}
}
```
Part 2

```java
import java.util.ArrayList;
import java.util.List;

class Athlete {
private String name;
private int age;
private String country;

public Athlete(String name, int age, String country) {
this.name = name;
this.age = age;
this.country = country;
}

public String getName() {
return name;
}

public int getAge() {
return age;
}

public String getCountry() {
return country;
}
}

public class Main {
public static void main(String[] args) {
Listthlete> athletes = new ArrayList<>();

athletes.add(new Athlete("John Doe", 25, "USA"));
athletes.add(new Athlete("Alice Smith", 30, "UK"));
athletes.add(new Athlete("Bob Johnson", 28, "Canada"));
athletes.add(new Athlete("Emily Brown", 32, "Australia"));
athletes.add(new Athlete("Michael Davis", 29, "USA"));
athletes.add(new Athlete("Sophia Wilson", 27, "UK"));
athletes.add(new Athlete("David Anderson", 31, "Canada"));
athletes.add(new Athlete("Olivia Taylor", 26, "Australia"));
athletes.add(new Athlete("James Thomas", 33, "USA"));
athletes.add(new Athlete("Emma Clark", 24, "UK"));

for (Athlete athlete : athletes) {
System.out.println("Name: " + athlete.getName());
System.out.println("Age: " + athlete.getAge());
System.out.println("Country: " + athlete.getCountry());
System.out.println();
}
}
}
```
Part 3
```java
import java.util.LinkedList;

public class Student {
private String name;
private int grade;

public Student(String name, int grade) {
this.name = name;
this.grade = grade;
}

public String getName() {
return name;
}

public int getGrade() {
return grade;
}

public static LinkedList> filterStudents(LinkedList> students, int threshold) {
LinkedList> filteredStudents = new LinkedList<>();
for (Student student : students) {
if (student.getGrade() > threshold) {
filteredStudents.add(student);
}
}
return filteredStudents;
}

public static void printStudentsAboveThreshold(LinkedList> students, int threshold) {
for (Student student : students) {
if (student.getGrade() > threshold) {
System.out.println(student.getName() + " - Grade: " + student.getGrade());
}
}
}

public static void main(String[] args) {
LinkedList> studentList = new LinkedList<>();
studentList.add(new Student("Aman", 85));
studentList.add(new Student("Gurkamal", 95));
studentList.add(new Student("Mannu", 70));
studentList.add(new Student("Anmol", 90));

int threshold = 80;
LinkedList> filteredStudents = filterStudents(studentList, threshold);
System.out.println("Students above threshold (" + threshold + "):");
for (Student student : filteredStudents) {
System.out.println(student.getName() + " - Grade: " + student.getGrade());
}

System.out.println("\nAll students above threshold (" + threshold + "):");
printStudentsAboveThreshold(studentList, threshold);
}
}
```
